2024-01-13 08:23:55,602 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Current SDK version is 0.15.12
2024-01-13 08:23:55,602 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Configure stats pid to 15528
2024-01-13 08:23:55,603 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Loading settings from C:\Users\Maxim\.config\wandb\settings
2024-01-13 08:23:55,603 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Loading settings from G:\Projects\AutoNav\FRCEnv\wandb\settings
2024-01-13 08:23:55,603 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Loading settings from environment variables: {'api_key': '***REDACTED***'}
2024-01-13 08:23:55,603 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-01-13 08:23:55,603 INFO    MainThread:15528 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'test-sac.py', 'program_abspath': 'G:\\Projects\\AutoNav\\FRCEnv\\test-sac.py', 'program': 'G:\\Projects\\AutoNav\\FRCEnv\\test-sac.py'}
2024-01-13 08:23:55,604 INFO    MainThread:15528 [wandb_init.py:_log_setup():528] Logging user logs to G:\Projects\AutoNav\FRCEnv\wandb\run-20240113_082355-1nxw2olk\logs\debug.log
2024-01-13 08:23:55,604 INFO    MainThread:15528 [wandb_init.py:_log_setup():529] Logging internal logs to G:\Projects\AutoNav\FRCEnv\wandb\run-20240113_082355-1nxw2olk\logs\debug-internal.log
2024-01-13 08:23:55,604 INFO    MainThread:15528 [wandb_init.py:init():568] calling init triggers
2024-01-13 08:23:55,604 INFO    MainThread:15528 [wandb_init.py:init():575] wandb.init called with sweep_config: {}
config: {}
2024-01-13 08:23:55,605 INFO    MainThread:15528 [wandb_init.py:init():618] starting backend
2024-01-13 08:23:55,605 INFO    MainThread:15528 [wandb_init.py:init():622] setting up manager
2024-01-13 08:23:55,618 INFO    MainThread:15528 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=spawn, using: spawn
2024-01-13 08:23:55,625 INFO    MainThread:15528 [wandb_init.py:init():628] backend started and connected
2024-01-13 08:23:55,648 INFO    MainThread:15528 [wandb_init.py:init():720] updated telemetry
2024-01-13 08:23:55,723 INFO    MainThread:15528 [wandb_init.py:init():753] communicating run to backend with 90.0 second timeout
2024-01-13 08:23:56,081 INFO    MainThread:15528 [wandb_run.py:_on_init():2220] communicating current version
2024-01-13 08:23:56,349 INFO    MainThread:15528 [wandb_run.py:_on_init():2229] got version response upgrade_message: "wandb version 0.16.2 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-01-13 08:23:56,349 INFO    MainThread:15528 [wandb_init.py:init():804] starting run threads in backend
2024-01-13 08:23:56,660 INFO    MainThread:15528 [wandb_run.py:_console_start():2199] atexit reg
2024-01-13 08:23:56,661 INFO    MainThread:15528 [wandb_run.py:_redirect():2054] redirect: wrap_raw
2024-01-13 08:23:56,661 INFO    MainThread:15528 [wandb_run.py:_redirect():2119] Wrapping output streams.
2024-01-13 08:23:56,661 INFO    MainThread:15528 [wandb_run.py:_redirect():2144] Redirects installed.
2024-01-13 08:23:56,662 INFO    MainThread:15528 [wandb_init.py:init():845] run started, returning control to user process
2024-01-13 08:24:00,072 INFO    MainThread:15528 [wandb_run.py:_tensorboard_callback():1470] tensorboard callback: runs\SAC_118, True
2024-01-13 08:24:00,120 INFO    MainThread:15528 [wandb_watch.py:watch():51] Watching
2024-01-13 08:24:00,125 INFO    MainThread:15528 [wandb_run.py:_config_callback():1324] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'stable_baselines3.sac.policies.MultiInputPolicy'>", 'device': 'cuda', 'verbose': 1, 'policy_kwargs': "{'net_arch': [512, 512, 512, 512], 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 150000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1705152240051249100, 'learning_rate': 0.001, 'tensorboard_log': 'runs', '_last_obs': "OrderedDict([('achieved_goal', array([[ 8.4765649e-01,  3.8552293e-01, -3.6602440e-01, -2.3202924e-03,\n         4.6365577e-01, -4.0671343e-01,  0.0000000e+00,  0.0000000e+00,\n        -1.8301220e-01, -1.1601462e-03,  0.0000000e+00,  0.0000000e+00,\n         1.0000000e+00,  9.5284358e-04,  1.0000000e+00,  1.0000000e+00,\n         1.0000000e+00,  1.0000000e+00,  1.0227871e-03,  1.0000000e+00,\n         1.0851948e-03,  1.1262962e-03,  1.0000000e+00,  1.0956221e-03,\n         1.0202012e-03,  1.0000000e+00,  9.0637739e-04,  8.6323998e-04,\n         8.2713808e-04,  7.9695362e-04,  7.7183347e-04,  1.0000000e+00,\n         1.0000000e+00,  7.2102825e-04,  1.0000000e+00,  1.0000000e+00,\n         1.0000000e+00,  6.9837581e-04,  1.0000000e+00,  1.0000000e+00,\n         7.1096903e-04,  7.2102825e-04,  1.0000000e+00,  7.5112225e-04,\n         7.7183347e-04,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,\n         9.0637739e-04,  9.5803273e-04,  1.0202012e-03,  1.0000000e+00,\n         1.0000000e+00,  1.3033611e-03,  1.4496533e-03,  1.6402296e-03,\n         1.8971182e-03,  2.1544748e-03,  2.1154482e-03,  2.0858957e-03,\n         2.0651957e-03,  2.0529248e-03,  2.0488370e-03,  2.0528510e-03,\n         2.0650467e-03,  2.0856683e-03,  2.1151376e-03,  2.1540748e-03,\n         1.9049564e-03,  1.6470944e-03,  1.4557799e-03,  1.3089118e-03,\n         1.1932397e-03,  1.1003419e-03,  1.0246158e-03,  9.6219446e-04,\n         9.1032835e-04,  8.6701452e-04,  8.3076494e-04,  8.0045720e-04,\n         7.7523477e-04,  7.5443980e-04,  7.3756609e-04,  7.2422629e-04,\n         7.1412878e-04,  7.0706097e-04,  7.0287852e-04,  7.0149743e-04,\n         7.0289028e-04,  7.0708484e-04,  7.1416510e-04,  7.2427589e-04,\n         7.3763001e-04,  7.5451948e-04,  7.7533210e-04,  8.0057461e-04,\n         8.3090557e-04,  8.6718251e-04,  9.1052923e-04,  9.6243550e-04,\n         1.0249069e-03,  1.1006967e-03,  1.0000000e+00,  1.1262962e-03,\n         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  9.9990203e-04,\n         1.0000000e+00,  1.0000000e+00,  9.5852162e-04,  9.5284358e-04]],\n      dtype=float32)), ('desired_goal', array([[0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],\n      dtype=float32)), ('observation', array([[ 8.4765649e-01,  3.8552293e-01, -3.6602440e-01, -2.3202924e-03,\n         4.6365577e-01, -4.0671343e-01,  0.0000000e+00,  0.0000000e+00,\n        -1.8301220e-01, -1.1601462e-03,  0.0000000e+00,  0.0000000e+00,\n         1.0000000e+00,  9.5284358e-04,  1.0000000e+00,  1.0000000e+00,\n         1.0000000e+00,  1.0000000e+00,  1.0227871e-03,  1.0000000e+00,\n         1.0851948e-03,  1.1262962e-03,  1.0000000e+00,  1.0956221e-03,\n         1.0202012e-03,  1.0000000e+00,  9.0637739e-04,  8.6323998e-04,\n         8.2713808e-04,  7.9695362e-04,  7.7183347e-04,  1.0000000e+00,\n         1.0000000e+00,  7.2102825e-04,  1.0000000e+00,  1.0000000e+00,\n         1.0000000e+00,  6.9837581e-04,  1.0000000e+00,  1.0000000e+00,\n         7.1096903e-04,  7.2102825e-04,  1.0000000e+00,  7.5112225e-04,\n         7.7183347e-04,  1.0000000e+00,  1.0000000e+00,  1.0000000e+00,\n         9.0637739e-04,  9.5803273e-04,  1.0202012e-03,  1.0000000e+00,\n         1.0000000e+00,  1.3033611e-03,  1.4496533e-03,  1.6402296e-03,\n         1.8971182e-03,  2.1544748e-03,  2.1154482e-03,  2.0858957e-03,\n         2.0651957e-03,  2.0529248e-03,  2.0488370e-03,  2.0528510e-03,\n         2.0650467e-03,  2.0856683e-03,  2.1151376e-03,  2.1540748e-03,\n         1.9049564e-03,  1.6470944e-03,  1.4557799e-03,  1.3089118e-03,\n         1.1932397e-03,  1.1003419e-03,  1.0246158e-03,  9.6219446e-04,\n         9.1032835e-04,  8.6701452e-04,  8.3076494e-04,  8.0045720e-04,\n         7.7523477e-04,  7.5443980e-04,  7.3756609e-04,  7.2422629e-04,\n         7.1412878e-04,  7.0706097e-04,  7.0287852e-04,  7.0149743e-04,\n         7.0289028e-04,  7.0708484e-04,  7.1416510e-04,  7.2427589e-04,\n         7.3763001e-04,  7.5451948e-04,  7.7533210e-04,  8.0057461e-04,\n         8.3090557e-04,  8.6718251e-04,  9.1052923e-04,  9.6243550e-04,\n         1.0249069e-03,  1.1006967e-03,  1.0000000e+00,  1.1262962e-03,\n         1.0000000e+00,  1.0000000e+00,  1.0000000e+00,  9.9990203e-04,\n         1.0000000e+00,  1.0000000e+00,  9.5852162e-04,  9.5284358e-04]],\n      dtype=float32))])", '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000002327A8F1EE0>', '_vec_normalize_env': 'None', 'observation_space': "Dict('achieved_goal': Box(-1.0, 1.0, (112,), float32), 'desired_goal': Box(-1.0, 1.0, (112,), float32), 'observation': Box(-1.0, 1.0, (112,), float32))", 'action_space': 'Box(-1.0, 1.0, (2,), float32)', 'n_envs': 1, 'buffer_size': 1000000, 'batch_size': 1024, 'learning_starts': 100, 'tau': 0.05, 'gamma': 0.99, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.her.her_replay_buffer.HerReplayBuffer object at 0x000002327A8F1F70>', 'replay_buffer_class': "<class 'stable_baselines3.her.her_replay_buffer.HerReplayBuffer'>", 'replay_buffer_kwargs': "{'n_sampled_goal': 4, 'goal_selection_strategy': 'future', 'env': <frcenv.FRCEnv object at 0x0000023269410D00>}", '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -2.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x00000232762A9820>', 'policy': 'MultiInputPolicy(\n  (actor): Actor(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (latent_pi): Sequential(\n      (0): Linear(in_features=336, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n    )\n    (mu): Linear(in_features=512, out_features=2, bias=True)\n    (log_std): Linear(in_features=512, out_features=2, bias=True)\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n  )\n)', 'actor': 'Actor(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=336, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n  )\n  (mu): Linear(in_features=512, out_features=2, bias=True)\n  (log_std): Linear(in_features=512, out_features=2, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x00000232E7282E50>'}
2024-01-13 08:24:26,302 WARNING MsgRouterThr:15528 [router.py:message_loop():77] message_loop has been closed
