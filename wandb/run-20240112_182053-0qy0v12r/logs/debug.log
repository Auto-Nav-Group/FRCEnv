2024-01-12 18:20:53,560 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Current SDK version is 0.15.12
2024-01-12 18:20:53,560 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Configure stats pid to 16140
2024-01-12 18:20:53,561 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Loading settings from C:\Users\Maxim\.config\wandb\settings
2024-01-12 18:20:53,561 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Loading settings from G:\Projects\AutoNav\FRCEnv\wandb\settings
2024-01-12 18:20:53,561 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Loading settings from environment variables: {'api_key': '***REDACTED***'}
2024-01-12 18:20:53,561 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-01-12 18:20:53,561 INFO    MainThread:16140 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'test-sac.py', 'program_abspath': 'G:\\Projects\\AutoNav\\FRCEnv\\test-sac.py', 'program': 'G:\\Projects\\AutoNav\\FRCEnv\\test-sac.py'}
2024-01-12 18:20:53,561 INFO    MainThread:16140 [wandb_init.py:_log_setup():528] Logging user logs to G:\Projects\AutoNav\FRCEnv\wandb\run-20240112_182053-0qy0v12r\logs\debug.log
2024-01-12 18:20:53,562 INFO    MainThread:16140 [wandb_init.py:_log_setup():529] Logging internal logs to G:\Projects\AutoNav\FRCEnv\wandb\run-20240112_182053-0qy0v12r\logs\debug-internal.log
2024-01-12 18:20:53,562 INFO    MainThread:16140 [wandb_init.py:init():568] calling init triggers
2024-01-12 18:20:53,562 INFO    MainThread:16140 [wandb_init.py:init():575] wandb.init called with sweep_config: {}
config: {}
2024-01-12 18:20:53,562 INFO    MainThread:16140 [wandb_init.py:init():618] starting backend
2024-01-12 18:20:53,562 INFO    MainThread:16140 [wandb_init.py:init():622] setting up manager
2024-01-12 18:20:53,575 INFO    MainThread:16140 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=spawn, using: spawn
2024-01-12 18:20:53,579 INFO    MainThread:16140 [wandb_init.py:init():628] backend started and connected
2024-01-12 18:20:53,607 INFO    MainThread:16140 [wandb_init.py:init():720] updated telemetry
2024-01-12 18:20:53,671 INFO    MainThread:16140 [wandb_init.py:init():753] communicating run to backend with 90.0 second timeout
2024-01-12 18:20:54,058 INFO    MainThread:16140 [wandb_run.py:_on_init():2220] communicating current version
2024-01-12 18:20:54,241 INFO    MainThread:16140 [wandb_run.py:_on_init():2229] got version response upgrade_message: "wandb version 0.16.2 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-01-12 18:20:54,241 INFO    MainThread:16140 [wandb_init.py:init():804] starting run threads in backend
2024-01-12 18:20:54,480 INFO    MainThread:16140 [wandb_run.py:_console_start():2199] atexit reg
2024-01-12 18:20:54,481 INFO    MainThread:16140 [wandb_run.py:_redirect():2054] redirect: wrap_raw
2024-01-12 18:20:54,481 INFO    MainThread:16140 [wandb_run.py:_redirect():2119] Wrapping output streams.
2024-01-12 18:20:54,481 INFO    MainThread:16140 [wandb_run.py:_redirect():2144] Redirects installed.
2024-01-12 18:20:54,483 INFO    MainThread:16140 [wandb_init.py:init():845] run started, returning control to user process
2024-01-12 18:20:57,527 INFO    MainThread:16140 [wandb_run.py:_tensorboard_callback():1470] tensorboard callback: runs\SAC_106, True
2024-01-12 18:20:57,579 INFO    MainThread:16140 [wandb_run.py:_config_callback():1324] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'stable_baselines3.sac.policies.MultiInputPolicy'>", 'device': 'cuda', 'verbose': 1, 'policy_kwargs': "{'net_arch': [512, 512, 512, 512], 'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 150000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1705101657507676200, 'learning_rate': 0.001, 'tensorboard_log': 'runs', '_last_obs': "OrderedDict([('achieved_goal', array([[-7.0172614e-01,  4.0123329e+00,  9.4699240e-01,  1.0070531e+00,\n        -2.6120727e+00, -8.4547836e-01,  0.0000000e+00,  0.0000000e+00,\n         9.4699240e-01,  1.0070531e+00,  0.0000000e+00,  0.0000000e+00,\n         4.0429225e+00,  4.0509162e+00,  4.0750556e+00,  4.1158252e+00,\n         7.3974195e+00,  6.6548820e+00,  5.8208704e+00,  8.9788628e+00,\n         9.2710896e+00,  5.0000000e+03,  7.6678567e+00,  5.0000000e+03,\n         6.5839925e+00,  5.0000000e+03,  5.0000000e+03,  5.0000000e+03,\n         5.0000000e+03,  5.1432371e+00,  4.9811211e+00,  5.0000000e+03,\n         5.0000000e+03,  4.6532431e+00,  4.5883250e+00,  4.5428748e+00,\n         4.5159645e+00,  4.5070529e+00,  5.0000000e+03,  5.0000000e+03,\n         5.0000000e+03,  4.6532431e+00,  4.7389960e+00,  5.0000000e+03,\n         4.9811211e+00,  5.1432371e+00,  5.0000000e+03,  5.5710239e+00,\n         5.0000000e+03,  5.0000000e+03,  6.5839925e+00,  5.0000000e+03,\n         7.6678567e+00,  4.1977620e+00,  4.2144132e+00,  4.7684541e+00,\n         5.5152774e+00,  2.2411871e+00,  2.2006326e+00,  2.1699309e+00,\n         2.1484365e+00,  2.1357100e+00,  2.1314955e+00,  2.1357100e+00,\n         2.1484365e+00,  2.1699309e+00,  2.2006326e+00,  2.2411871e+00,\n         2.2924817e+00,  2.3556938e+00,  2.4323626e+00,  2.5244877e+00,\n         4.2393489e+00,  3.9092143e+00,  3.6401103e+00,  3.4182911e+00,\n         3.2339833e+00,  3.0800674e+00,  2.9512548e+00,  2.8435557e+00,\n         2.7539263e+00,  2.6800280e+00,  2.6200619e+00,  2.5726514e+00,\n         2.5367599e+00,  2.5116320e+00,  2.4967537e+00,  2.4918270e+00,\n         2.4967537e+00,  2.5116320e+00,  2.5367599e+00,  2.5726514e+00,\n         2.6200619e+00,  2.6800280e+00,  2.7539263e+00,  2.8435557e+00,\n         2.9512548e+00,  3.0800674e+00,  3.2339833e+00,  3.4182911e+00,\n         3.6401103e+00,  3.9092143e+00,  4.2393489e+00,  4.6504335e+00,\n         5.1724086e+00,  5.8523908e+00,  6.7689776e+00,  4.2509804e+00,\n         4.1740584e+00,  4.1158252e+00,  4.0750556e+00,  4.0509162e+00]],\n      dtype=float32)), ('desired_goal', array([[0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],\n      dtype=float32)), ('observation', array([[-7.0172614e-01,  4.0123329e+00,  9.4699240e-01,  1.0070531e+00,\n        -2.6120727e+00, -8.4547836e-01,  0.0000000e+00,  0.0000000e+00,\n         9.4699240e-01,  1.0070531e+00,  0.0000000e+00,  0.0000000e+00,\n         4.0429225e+00,  4.0509162e+00,  4.0750556e+00,  4.1158252e+00,\n         7.3974195e+00,  6.6548820e+00,  5.8208704e+00,  8.9788628e+00,\n         9.2710896e+00,  5.0000000e+03,  7.6678567e+00,  5.0000000e+03,\n         6.5839925e+00,  5.0000000e+03,  5.0000000e+03,  5.0000000e+03,\n         5.0000000e+03,  5.1432371e+00,  4.9811211e+00,  5.0000000e+03,\n         5.0000000e+03,  4.6532431e+00,  4.5883250e+00,  4.5428748e+00,\n         4.5159645e+00,  4.5070529e+00,  5.0000000e+03,  5.0000000e+03,\n         5.0000000e+03,  4.6532431e+00,  4.7389960e+00,  5.0000000e+03,\n         4.9811211e+00,  5.1432371e+00,  5.0000000e+03,  5.5710239e+00,\n         5.0000000e+03,  5.0000000e+03,  6.5839925e+00,  5.0000000e+03,\n         7.6678567e+00,  4.1977620e+00,  4.2144132e+00,  4.7684541e+00,\n         5.5152774e+00,  2.2411871e+00,  2.2006326e+00,  2.1699309e+00,\n         2.1484365e+00,  2.1357100e+00,  2.1314955e+00,  2.1357100e+00,\n         2.1484365e+00,  2.1699309e+00,  2.2006326e+00,  2.2411871e+00,\n         2.2924817e+00,  2.3556938e+00,  2.4323626e+00,  2.5244877e+00,\n         4.2393489e+00,  3.9092143e+00,  3.6401103e+00,  3.4182911e+00,\n         3.2339833e+00,  3.0800674e+00,  2.9512548e+00,  2.8435557e+00,\n         2.7539263e+00,  2.6800280e+00,  2.6200619e+00,  2.5726514e+00,\n         2.5367599e+00,  2.5116320e+00,  2.4967537e+00,  2.4918270e+00,\n         2.4967537e+00,  2.5116320e+00,  2.5367599e+00,  2.5726514e+00,\n         2.6200619e+00,  2.6800280e+00,  2.7539263e+00,  2.8435557e+00,\n         2.9512548e+00,  3.0800674e+00,  3.2339833e+00,  3.4182911e+00,\n         3.6401103e+00,  3.9092143e+00,  4.2393489e+00,  4.6504335e+00,\n         5.1724086e+00,  5.8523908e+00,  6.7689776e+00,  4.2509804e+00,\n         4.1740584e+00,  4.1158252e+00,  4.0750556e+00,  4.0509162e+00]],\n      dtype=float32))])", '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x0000028EB8EBF460>', '_vec_normalize_env': 'None', 'observation_space': "Dict('achieved_goal': Box(-1.0, 1.0, (112,), float32), 'desired_goal': Box(-1.0, 1.0, (112,), float32), 'observation': Box(-1.0, 1.0, (112,), float32))", 'action_space': 'Box(-1.0, 1.0, (2,), float32)', 'n_envs': 1, 'buffer_size': 1000000, 'batch_size': 1024, 'learning_starts': 100, 'tau': 0.05, 'gamma': 0.99, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.her.her_replay_buffer.HerReplayBuffer object at 0x0000028EB8EBF9D0>', 'replay_buffer_class': "<class 'stable_baselines3.her.her_replay_buffer.HerReplayBuffer'>", 'replay_buffer_kwargs': "{'n_sampled_goal': 4, 'goal_selection_strategy': 'future', 'env': <frcenv.FRCEnv object at 0x0000028EA7920D00>}", '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -2.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function constant_fn.<locals>.func at 0x0000028EB8E10700>', 'policy': 'MultiInputPolicy(\n  (actor): Actor(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (latent_pi): Sequential(\n      (0): Linear(in_features=336, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n    )\n    (mu): Linear(in_features=512, out_features=2, bias=True)\n    (log_std): Linear(in_features=512, out_features=2, bias=True)\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): CombinedExtractor(\n      (extractors): ModuleDict(\n        (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n        (desired_goal): Flatten(start_dim=1, end_dim=-1)\n        (observation): Flatten(start_dim=1, end_dim=-1)\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=338, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=512, out_features=512, bias=True)\n      (5): ReLU()\n      (6): Linear(in_features=512, out_features=512, bias=True)\n      (7): ReLU()\n      (8): Linear(in_features=512, out_features=1, bias=True)\n    )\n  )\n)', 'actor': 'Actor(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=336, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n  )\n  (mu): Linear(in_features=512, out_features=2, bias=True)\n  (log_std): Linear(in_features=512, out_features=2, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): CombinedExtractor(\n    (extractors): ModuleDict(\n      (achieved_goal): Flatten(start_dim=1, end_dim=-1)\n      (desired_goal): Flatten(start_dim=1, end_dim=-1)\n      (observation): Flatten(start_dim=1, end_dim=-1)\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=338, out_features=512, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=512, out_features=512, bias=True)\n    (5): ReLU()\n    (6): Linear(in_features=512, out_features=512, bias=True)\n    (7): ReLU()\n    (8): Linear(in_features=512, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x0000028F60E45730>'}
