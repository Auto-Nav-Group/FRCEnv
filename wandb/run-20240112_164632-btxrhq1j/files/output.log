Using cuda device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
Traceback (most recent call last):
  File "G:\Projects\AutoNav\FRCEnv\test-sac.py", line 30, in <module>
    model.learn(int(LEARNING_STEPS), callback=WandbCallback())
  File "C:\Users\Maxim\AppData\Roaming\Python\Python38\site-packages\stable_baselines3\sac\sac.py", line 307, in learn
    return super().learn(
  File "C:\Users\Maxim\AppData\Roaming\Python\Python38\site-packages\stable_baselines3\common\off_policy_algorithm.py", line 314, in learn
    total_timesteps, callback = self._setup_learn(
  File "C:\Users\Maxim\AppData\Roaming\Python\Python38\site-packages\stable_baselines3\common\off_policy_algorithm.py", line 297, in _setup_learn
    return super()._setup_learn(
  File "C:\Users\Maxim\AppData\Roaming\Python\Python38\site-packages\stable_baselines3\common\base_class.py", line 423, in _setup_learn
    self._last_obs = self.env.reset()  # type: ignore[assignment]
  File "C:\Users\Maxim\AppData\Roaming\Python\Python38\site-packages\stable_baselines3\common\vec_env\dummy_vec_env.py", line 77, in reset
    obs, self.reset_infos[env_idx] = self.envs[env_idx].reset(seed=self._seeds[env_idx], **maybe_options)
  File "C:\Users\Maxim\AppData\Roaming\Python\Python38\site-packages\stable_baselines3\common\monitor.py", line 83, in reset
    return self.env.reset(**kwargs)
  File "G:\Projects\AutoNav\FRCEnv\frcenv.py", line 75, in reset
    state, dist, min_dist = self.internal_env.reset()
  File "G:\Projects\AutoNav\FRCEnv\robotenv.py", line 223, in reset
    min_dist, dists = self._run_lidar()
  File "G:\Projects\AutoNav\FRCEnv\robotenv.py", line 283, in _run_lidar
    return min(non_goal), distances
KeyboardInterrupt